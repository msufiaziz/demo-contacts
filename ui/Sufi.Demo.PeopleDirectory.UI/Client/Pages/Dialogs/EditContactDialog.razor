@inject HttpClient Http

<MudDialog>
	<DialogContent>
		<MudForm @ref="form" Model="request" @bind-IsValid="success" @bind-Errors="errors">
			<MudTextField Label="Username" Required @bind-Value="request.UserName" />
			<MudTextField Label="Email" Required @bind-Value="request.Email" />
			<MudTextField Label="Phone" Required @bind-Value="request.Phone" />
			<MudTextField Label="Skill Sets" Required @bind-Value="request.SkillSets" />
			<MudTextField Label="Hobby" Required @bind-Value="request.Hobby" />
		</MudForm>
	</DialogContent>
	<DialogActions>
		<MudButton OnClick="Cancel">Cancel</MudButton>
		<MudButton OnClick="Submit">Ok</MudButton>
	</DialogActions>
</MudDialog>

@code {
	[CascadingParameter]
	private MudDialogInstance MudDialog { get; set; } = null!;
	[Parameter]
	public int Id { get; set; }

	private AddEditContactCommand request = new();
	private MudForm? form;
	private bool success;
	private string[] errors = { };

	protected override async Task OnInitializedAsync()
	{
		var contact = await Http.GetFromJsonAsync<ContactModel>($"api/v1/contacts/{Id}");
		request.Id = Id;
		request.UserName = contact!.UserName;
		request.Email = contact.Email;
		request.Phone = contact.Phone;
		request.SkillSets = contact.SkillSets;
		request.Hobby = contact.Hobby;
	}

	private void Cancel() => MudDialog.Cancel();

	private async Task Submit()
	{
		await form!.Validate();
		if (!success)
		{
			return;
		}

		MudDialog!.Close(request);
	}
}
